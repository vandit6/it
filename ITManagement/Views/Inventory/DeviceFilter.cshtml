@model ITManagement.ViewModels.DeviceViewModel

<style>
    /* Custom styles */
    .head {
        font-size: 2.5rem;
        font-weight: 600;
        text-align: center;
        margin-bottom: 20px;
        color: #333;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);
    }


    .form-group {
        margin-bottom: 15px;
    }

    .form-control {
        border: 1px solid #ccc;
        border-radius: 4px;
        font-size: 1.2rem;
        padding: 10px;
        box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);
    }

    .btn-primary {
        background-color: #333;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        font-size: 1.4rem;
        cursor: pointer;
        box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);
    }

        .btn-primary:hover {
            background-color: #555;
        }

    .table {
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

        .table th {
            background-color: #333;
            color: #fff;
        }

        .table td {
            background-color: #f9f9f9;
        }
    .filter {
        font-size: 1.5rem;
    }
</style>

<h1 class="head text-center" style="font-size: 5rem; margin: 30px">INVENTORY</h1>

@using (Html.BeginForm("DeviceFilter", "Inventory", FormMethod.Get))
{
    <div class="container filter">
        <div class="form-group row">
            <div class="col-md-3">
                @Html.Label("Filter by Category:")
                @Html.DropDownListFor(model => model.SelectedCategoryId, new SelectList(Model.Category, "CategoryId", "CategoryName"), "All Categories", new { @class = "form-control" })
            </div>
            <div class="col-md-3">
                @Html.Label("Filter by Status:")
                @Html.DropDownListFor(model => model.SelectedStatus, new SelectList(new List<SelectListItem>
                {
                    new SelectListItem { Text = "All", Value = "" },
                    new SelectListItem { Text = "Alloted", Value = "true" },
                    new SelectListItem { Text = "Unalloted", Value = "false" }
                }, "Value", "Text"), "All", new { @class = "form-control" })
            </div>
            <div class="col-md-2">
                @Html.Label("Filter by Device Name:")
                @Html.TextBoxFor(model => model.SelectedDeviceName, new { @class = "form-control" })
            </div>
            <div class="col-md-2">
                @Html.Label("Filter by User Name:")
                @Html.TextBoxFor(model => model.SelectedUserName, new { @class = "form-control" })
            </div>
            <div class="col-md-2">
                <button type="submit" class="btn btn-primary">
                    Filter
                </button>
            </div>
        </div>
    </div>
}

<table class="table">
    <thead>
        <tr>
            <th>Device ID</th>
            <th>Name</th>
            <th>Category</th>
            <th>Description</th>
            <th>Status</th>
            <th>User</th>
            <th>Alloted Date</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var device in Model.Device)
        {
            <tr>
                <td>@device.DeviceId</td>
                <td>@device.DeviceName</td>
                <td>@(device.Category != null ? device.Category.CategoryName : "")</td>
                <td>@device.Description</td>
                <td>@(device.Status ? "Alloted" : "Unalloted")</td>
                <td>@(device.User != null ? device.User.FullName : "")</td>
                <td>@(device.AllotedDate != null ? device.AllotedDate.Value.ToString("MM/dd/yyyy") : "")</td>
            </tr>
        }
    </tbody>
</table>
